/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { CollectionModelEntityModelProject } from '../models/collection-model-entity-model-project';
import { executeSearchProjectGet } from '../fn/project-search-controller/execute-search-project-get';
import { ExecuteSearchProjectGet$Params } from '../fn/project-search-controller/execute-search-project-get';
import { executeSearchProjectGet1 } from '../fn/project-search-controller/execute-search-project-get-1';
import { ExecuteSearchProjectGet1$Params } from '../fn/project-search-controller/execute-search-project-get-1';

@Injectable({ providedIn: 'root' })
export class ProjectSearchControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `executeSearchProjectGet()` */
  static readonly ExecuteSearchProjectGetPath = '/projects/search/averageProjectDuration';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `executeSearchProjectGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  executeSearchProjectGet$Response(params?: ExecuteSearchProjectGet$Params, context?: HttpContext): Observable<StrictHttpResponse<number>> {
    return executeSearchProjectGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `executeSearchProjectGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  executeSearchProjectGet(params?: ExecuteSearchProjectGet$Params, context?: HttpContext): Observable<number> {
    return this.executeSearchProjectGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<number>): number => r.body)
    );
  }

  /** Path part for operation `executeSearchProjectGet1()` */
  static readonly ExecuteSearchProjectGet1Path = '/projects/search/countProjectsByStatus';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `executeSearchProjectGet1()` instead.
   *
   * This method doesn't expect any request body.
   */
  executeSearchProjectGet1$Response(params?: ExecuteSearchProjectGet1$Params, context?: HttpContext): Observable<StrictHttpResponse<CollectionModelEntityModelProject>> {
    return executeSearchProjectGet1(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `executeSearchProjectGet1$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  executeSearchProjectGet1(params?: ExecuteSearchProjectGet1$Params, context?: HttpContext): Observable<CollectionModelEntityModelProject> {
    return this.executeSearchProjectGet1$Response(params, context).pipe(
      map((r: StrictHttpResponse<CollectionModelEntityModelProject>): CollectionModelEntityModelProject => r.body)
    );
  }

}
